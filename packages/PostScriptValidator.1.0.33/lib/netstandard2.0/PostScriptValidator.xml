<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PostScriptValidator</name>
    </assembly>
    <members>
        <member name="T:PostScriptValidator.PostScriptValidator">
            <summary>
            PostScriptValidator wraps calls to ghostscript that tries to parse a given postscript file.
            </summary>
        </member>
        <member name="P:PostScriptValidator.PostScriptValidator.GhostscriptBinPath">
            <summary>
            Used Path to ghostscript bin
            </summary>
            <value>Path to ghostscript bin</value>
        </member>
        <member name="P:PostScriptValidator.PostScriptValidator.ExitCode">
            <summary>
            Last exitcode from ghostscript
            </summary>
            <value>Is 0 if ghostscript could parse the validated postscript file</value>
        </member>
        <member name="P:PostScriptValidator.PostScriptValidator.ErrorMessage">
            <summary>
            Last stderr output from ghostscript
            </summary>
            <value>Can give you some hints if ghostscript failes to parse the validated postscript file</value>
        </member>
        <member name="P:PostScriptValidator.PostScriptValidator.StandardOutput">
            <summary>
            Last stdout output from ghostscript
            </summary>
            <value>Contains the stdout of the last validation session of ghostscript</value>
        </member>
        <member name="M:PostScriptValidator.PostScriptValidator.#ctor">
            <summary>
            Use this constructor to use the embedded ghostscript binaries on windows, or guess the location on linux
            </summary>
        </member>
        <member name="M:PostScriptValidator.PostScriptValidator.#ctor(System.String)">
            <summary>
            Use this constructor to use custom ghostscript bins, e.g. for ubuntu 18.04 /usr/bin/gs
            </summary>
            <param name="customPathToGhostscriptBin"></param>
        </member>
        <member name="M:PostScriptValidator.PostScriptValidator.Validate(System.String)">
            <summary>
            Validates a ps by trying to parse it using ghostscript
            </summary>
            <param name="pathToPsFile"></param>
            <returns>True for parse able postscript files</returns>
        </member>
        <member name="M:PostScriptValidator.PostScriptValidator.EmbedFonts(System.String,System.String)">
            <summary>
            Embeds fonts in pdf
            </summary>
            <param name="pathToPdfFile"></param>
            <param name="pathToPdfFileWithEmbeddedFonts"></param>
        </member>
        <member name="M:PostScriptValidator.PostScriptValidator.Dispose">
            <summary>
            Disposing ghostscript bins
            </summary>
        </member>
        <member name="M:PostScriptValidator.PostScriptValidator.Dispose(System.Boolean)">
            <summary>
            Disposing ghostscript bins
            </summary>
        </member>
        <member name="T:PostScriptValidator.PostScriptValidatorException">
            <summary>
            Gets thrown if calls to ghostscript failed
            </summary>
        </member>
        <member name="M:PostScriptValidator.PostScriptValidatorException.#ctor">
            <summary>
            PostScriptValidatorException ctor
            </summary>
        </member>
        <member name="M:PostScriptValidator.PostScriptValidatorException.#ctor(System.String)">
            <summary>
            PostScriptValidatorException ctor
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:PostScriptValidator.PostScriptValidatorException.#ctor(System.String,System.Exception)">
            <summary>
            PostScriptValidatorException ctor
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <returns></returns>
        </member>
        <member name="M:PostScriptValidator.PostScriptValidatorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            PostScriptValidatorException ctor
            </summary>
            <param name="info"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:PostScriptValidator.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:PostScriptValidator.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:PostScriptValidator.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
    </members>
</doc>
