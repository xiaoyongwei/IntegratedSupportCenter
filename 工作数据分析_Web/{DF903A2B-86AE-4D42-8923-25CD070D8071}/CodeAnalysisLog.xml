<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio 10.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="10.0">
 <Targets>
  <Target Name="C:\Users\Administrator\AppData\Local\Temp\tmp7227.tmp.cadir\bin\App_Code.dll">
   <Modules>
    <Module Name="app_code.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="My" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Md5Decrypt(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2020-01-23 12:35:39Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="My.cs" Line="80">在方法 'My.Md5Decrypt(string)' 中，请在对 'mobjCryptoService' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="My.cs" Line="84">在方法 'My.Md5Decrypt(string)' 中，请在对 'ms' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Md5Encrypt(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2020-01-23 12:35:39Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="My.cs" Line="51">在方法 'My.Md5Encrypt(string)' 中，请在对 'mobjCryptoService' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="My.cs" Line="56">在方法 'My.Md5Encrypt(string)' 中，请在对 'ms' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MySqlDbHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ExecuteDataSet(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2020-01-23 12:35:39Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="405">'MySqlDbHelper.ExecuteDataSet(string)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2020-01-23 12:35:39Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="394">在方法 'MySqlDbHelper.ExecuteDataSet(string)' 中，'ds' 对象未按所有异常路径释放。请在对 'ds' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="397">在方法 'MySqlDbHelper.ExecuteDataSet(string)' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="395">在方法 'MySqlDbHelper.ExecuteDataSet(string)' 中，请在对 'con' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="402">在方法 'MySqlDbHelper.ExecuteDataSet(string)' 中，请在对 'sda' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2020-01-23 12:35:39Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="397">传递给 'MySqlDbHelper.ExecuteDataSet(string)' 中的 'MySqlCommand.MySqlCommand(string)' 的查询字符串可能包含以下变量 'commandText'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteDataSet(System.String,System.Data.CommandType)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2020-01-23 12:35:39Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="446">'MySqlDbHelper.ExecuteDataSet(string, CommandType)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2020-01-23 12:35:39Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="435">在方法 'MySqlDbHelper.ExecuteDataSet(string, CommandType)' 中，'ds' 对象未按所有异常路径释放。请在对 'ds' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="437">在方法 'MySqlDbHelper.ExecuteDataSet(string, CommandType)' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="436">在方法 'MySqlDbHelper.ExecuteDataSet(string, CommandType)' 中，请在对 'con' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="443">在方法 'MySqlDbHelper.ExecuteDataSet(string, CommandType)' 中，请在对 'sda' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteDataSet(System.String,System.Data.CommandType,MySql.Data.MySqlClient.MySqlParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2020-01-23 12:35:39Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="487">'MySqlDbHelper.ExecuteDataSet(string, CommandType, params MySqlParameter[])' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2020-01-23 12:35:39Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="477">在方法 'MySqlDbHelper.ExecuteDataSet(string, CommandType, params MySqlParameter[])' 中，'ds' 对象未按所有异常路径释放。请在对 'ds' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="479">在方法 'MySqlDbHelper.ExecuteDataSet(string, CommandType, params MySqlParameter[])' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="478">在方法 'MySqlDbHelper.ExecuteDataSet(string, CommandType, params MySqlParameter[])' 中，请在对 'con' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="484">在方法 'MySqlDbHelper.ExecuteDataSet(string, CommandType, params MySqlParameter[])' 中，请在对 'sda' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteDataTable(System.String,System.Data.CommandType,MySql.Data.MySqlClient.MySqlParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2020-01-23 12:35:39Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="360">在方法 'MySqlDbHelper.ExecuteDataTable(string, CommandType, MySqlParameter[])' 中，'data' 对象未按所有异常路径释放。请在对 'data' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="374">在方法 'MySqlDbHelper.ExecuteDataTable(string, CommandType, MySqlParameter[])' 中，请在对 'adapter' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2020-01-23 12:35:39Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="363">传递给 'MySqlDbHelper.ExecuteDataTable(string, CommandType, MySqlParameter[])' 中的 'MySqlCommand.MySqlCommand(string, MySqlConnection)' 的查询字符串可能包含以下变量 'sql'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteNonQuery(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2020-01-23 12:35:39Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="62">'MySqlDbHelper.ExecuteNonQuery(string)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2020-01-23 12:35:39Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="54">在方法 'MySqlDbHelper.ExecuteNonQuery(string)' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2020-01-23 12:35:39Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="54">传递给 'MySqlDbHelper.ExecuteNonQuery(string)' 中的 'MySqlCommand.MySqlCommand(string)' 的查询字符串可能包含以下变量 'commandText'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteNonQuery(System.String,System.Data.CommandType)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2020-01-23 12:35:39Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="95">'MySqlDbHelper.ExecuteNonQuery(string, CommandType)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2020-01-23 12:35:39Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="85">在方法 'MySqlDbHelper.ExecuteNonQuery(string, CommandType)' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteNonQuery(System.String,System.Data.CommandType,MySql.Data.MySqlClient.MySqlParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2020-01-23 12:35:39Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="130">'MySqlDbHelper.ExecuteNonQuery(string, CommandType, params MySqlParameter[])' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2020-01-23 12:35:39Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="120">在方法 'MySqlDbHelper.ExecuteNonQuery(string, CommandType, params MySqlParameter[])' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteReader(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2020-01-23 12:35:39Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="261">'MySqlDbHelper.ExecuteReader(string)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2020-01-23 12:35:39Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="255">在方法 'MySqlDbHelper.ExecuteReader(string)' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="253">在方法 'MySqlDbHelper.ExecuteReader(string)' 中，请在对 'con' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2020-01-23 12:35:39Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="255">传递给 'MySqlDbHelper.ExecuteReader(string)' 中的 'MySqlCommand.MySqlCommand(string)' 的查询字符串可能包含以下变量 'commandText'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteReader(System.String,System.Data.CommandType)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2020-01-23 12:35:39Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="291">'MySqlDbHelper.ExecuteReader(string, CommandType)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2020-01-23 12:35:39Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="284">在方法 'MySqlDbHelper.ExecuteReader(string, CommandType)' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="283">在方法 'MySqlDbHelper.ExecuteReader(string, CommandType)' 中，请在对 'con' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteReader(System.String,System.Data.CommandType,MySql.Data.MySqlClient.MySqlParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2020-01-23 12:35:39Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="322">'MySqlDbHelper.ExecuteReader(string, CommandType, params MySqlParameter[])' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2020-01-23 12:35:39Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="315">在方法 'MySqlDbHelper.ExecuteReader(string, CommandType, params MySqlParameter[])' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="314">在方法 'MySqlDbHelper.ExecuteReader(string, CommandType, params MySqlParameter[])' 中，请在对 'con' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteScalar(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2020-01-23 12:35:39Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="162">'MySqlDbHelper.ExecuteScalar(string)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2020-01-23 12:35:39Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="155">在方法 'MySqlDbHelper.ExecuteScalar(string)' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2020-01-23 12:35:39Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="155">传递给 'MySqlDbHelper.ExecuteScalar(string)' 中的 'MySqlCommand.MySqlCommand(string)' 的查询字符串可能包含以下变量 'commandText'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteScalar(System.String,System.Data.CommandType)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2020-01-23 12:35:39Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="195">'MySqlDbHelper.ExecuteScalar(string, CommandType)' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2020-01-23 12:35:39Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="185">在方法 'MySqlDbHelper.ExecuteScalar(string, CommandType)' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteScalar(System.String,System.Data.CommandType,MySql.Data.MySqlClient.MySqlParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2020-01-23 12:35:39Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="230">'MySqlDbHelper.ExecuteScalar(string, CommandType, params MySqlParameter[])' 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Issue>
            </Message>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2020-01-23 12:35:39Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="220">在方法 'MySqlDbHelper.ExecuteScalar(string, CommandType, params MySqlParameter[])' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSqlTran_Ex(System.Collections.Generic.List`1&lt;System.String&gt;)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2020-01-23 12:35:39Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="648">在方法 'MySqlDbHelper.ExecuteSqlTran_Ex(List&lt;string&gt;)' 中，请在对 'cmd' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2020-01-23 12:35:39Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="654">传递给 'MySqlDbHelper.ExecuteSqlTran_Ex(List&lt;string&gt;)' 中的 'MySqlCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'item'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteZip()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2020-01-23 12:35:39Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="591">可以在方法 'MySqlDbHelper.ExecuteZip()' 中多次释放对象 'connection'。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 591</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PrepareCommand(MySql.Data.MySqlClient.MySqlCommand,MySql.Data.MySqlClient.MySqlConnection,MySql.Data.MySqlClient.MySqlTransaction&amp;,System.Boolean,System.Data.CommandType,System.String,MySql.Data.MySqlClient.MySqlParameter[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2020-01-23 12:35:39Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="551">传递给 'MySqlDbHelper.PrepareCommand(MySqlCommand, MySqlConnection, ref MySqlTransaction, bool, CommandType, string, params MySqlParameter[])' 中的 'MySqlCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'cmdText'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SelectPaging(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2020-01-23 12:35:39Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\Administrator\Documents\GitHub\IntegratedSupportCenter\工作数据分析_Web\App_Code" File="MySqlDbHelper.cs" Line="518">在方法 'MySqlDbHelper.SelectPaging(string, string, string, string, int, int, out int)' 中，'dt' 对象未按所有异常路径释放。请在对 'dt' 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200">
   <Name>再次引发以保留堆栈详细信息</Name>
   <Description>重复引发捕获的异常时，请使用 IL 再次引发指令保留原始堆栈详细信息。</Description>
   <Resolution Name="Default">{0} 再次引发捕获的异常并将其显式地指定为一个参数。请改用不带参数的“throw”以保留该异常最初引发时所在的堆栈位置。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182363(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="usagerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="不要多次释放对象" Category="Microsoft.Usage" CheckId="CA2202">
   <Name>不要多次释放对象</Name>
   <Description>可以多次调用正确实现的 Dispose 方法，而不会引发异常。但是，并不保证所有情况下都会如此。若要避免生成 System.ObjectDisposedException，您不应对一个对象多次调用 Dispose。</Description>
   <Resolution Name="Default">可以在方法 {1} 中多次释放对象 {0}。若要避免生成 System.ObjectDisposedException，不应对一个对象多次调用 Dispose。: Lines: 591</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182334(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="丢失范围之前释放对象" Category="Microsoft.Reliability" CheckId="CA2000">
   <Name>丢失范围之前释放对象</Name>
   <Description>如果在对某个可释放对象的所有引用超出范围之前未显式释放该对象，则当垃圾回收器运行该对象的终结器时，会在某个不确定时间释放该对象。由于可能会发生阻止该对象的终结器运行的意外事件，因此应改为显式释放该对象。</Description>
   <Resolution Name="ExceptionEdge">在方法 {0} 中，{1} 对象未按所有异常路径释放。请在对 {1} 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Resolution>
   <Resolution Name="NonExceptionEdge">在方法 {0} 中，请在对 {1} 对象的所有引用超出范围之前，对该对象调用 System.IDisposable.Dispose。</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182289(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100">
   <Name>检查 SQL 查询是否存在安全漏洞</Name>
   <Description>通过用户输入生成的 SQL 命令字符串容易受到 SQL 注入式攻击。Microsoft SQL Server 和其他数据库服务器支持存储过程和参数化 SQL 查询，这将降低受到注入式攻击的风险。</Description>
   <Resolution Name="WithNonLiterals">传递给 {1} 中的 {0} 的查询字符串可能包含以下变量 {2}。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182310(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="10.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">类别</String>
  <String Key="Certainty">确定性</String>
  <String Key="CollapseAll">全部折叠</String>
  <String Key="CheckId">检查 ID</String>
  <String Key="Error">错误</String>
  <String Key="Errors">错误</String>
  <String Key="ExpandAll">全部展开</String>
  <String Key="Help">帮助</String>
  <String Key="Line">行</String>
  <String Key="Messages">消息</String>
  <String Key="LocationNotStoredInPdb">[位置未存储在 Pdb 中]</String>
  <String Key="Project">项目</String>
  <String Key="Resolution">解析</String>
  <String Key="Rule">规则</String>
  <String Key="RuleFile">规则文件</String>
  <String Key="RuleDescription">规则说明</String>
  <String Key="Source">源</String>
  <String Key="Status">状态</String>
  <String Key="Target">目标</String>
  <String Key="Warning">警告</String>
  <String Key="Warnings">警告</String>
  <String Key="ReportTitle">代码分析报告</String>
 </Localized>
</FxCopReport>
